---
import { getCollection } from 'astro:content';

import Layout from '../pages/Layout.astro';
import ParanormalModal from '../components/paranormalModal/Modal.astro';
import InstagrameableModal from '../components/instagrameableModal/Modal.astro';
import EspacioSingularModal from '../components/espacioSingularModal/Modal.astro';
import CuriosidadOcultaModal from '../components/curiosidadOcultaModal/Modal.astro';

import {getCoordinatesAndID} from '../utils/getCoordinatesAndID';

const allParanormalSites = await getCollection('paranormalCollection');
const allEspacioSingularSites = await getCollection('espacioSingularCollection');
const allCuriosidadOcultaSites = await getCollection('curiosidadOcultaCollection');
const allInstagrameableSites = await getCollection('instagrameableCollection');

const paranormalSitesCoordinates = allParanormalSites.map(site => getCoordinatesAndID(site));
const espacioSingularSitesCoordinates = allEspacioSingularSites.map(site => getCoordinatesAndID(site))
const curiosidadOcultaSitesCoordinates = allCuriosidadOcultaSites.map(site => getCoordinatesAndID(site));
const instagrameableSitesCoordinates = allInstagrameableSites.map(site => getCoordinatesAndID(site));
---
<Layout>
	<div id="map"></div>
	<div id="paranormalData" data-sites={JSON.stringify(paranormalSitesCoordinates)}></div>
	<div id="sitesSingularSpaceData" data-sites={JSON.stringify(espacioSingularSitesCoordinates)}></div>
	<div id="sitesCuriosidadOcultaData" data-sites={JSON.stringify(curiosidadOcultaSitesCoordinates)}></div>
	<div id="sitesInstagrameableData" data-sites={JSON.stringify(instagrameableSitesCoordinates)}></div>
	{
		allParanormalSites.map(site => (
		<div class="modal-container hidden" id={`modal-${site.data.id}`}>
			<div class="container">
				<ParanormalModal site={site} />
			</div>
		</div>
		))
	}
	{
		allInstagrameableSites.map(site => (
		<div class="modal-container hidden" id={`modal-${site.data.id}`}>
			<div class="container">
				<InstagrameableModal site={site} />
			</div>
		</div>
		))
	}
	{
		allEspacioSingularSites.map(site => (
		<div class="modal-container hidden" id={`modal-${site.data.id}`}>
			<div class="container">
				<EspacioSingularModal site={site} />
			</div>
		</div>
		))
	}
	{
		allCuriosidadOcultaSites.map(site => (
		<div class="modal-container hidden" id={`modal-${site.data.id}`}>
			<div class="container">
				<CuriosidadOcultaModal site={site} />
			</div>
		</div>
		))
	}
</Layout>

<script>
	// @ts-ignore
	var map = L.map('map').setView([-12.04613, -77.0359], 17);
	
	// @ts-ignore
	L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
		}).addTo(map);

	/* Creamos los Ã­conos */
	// @ts-ignore
	var paranormalIcon = L.icon({
		iconUrl: '/Marcadores/paranormal.svg',
		iconSize: [48, 48],
		iconAnchor: [24, 24]
	})

	// @ts-ignore
	var espacioSingularIcon = L.icon({
		iconUrl: '/Marcadores/espacioSingular.svg',
		iconSize: [48, 48],
		iconAnchor: [24, 24]
	})

	// @ts-ignore
	var curiosidadOcultaIcon = L.icon({
		iconUrl: '/Marcadores/curiosidadOculta.svg',
		iconSize: [48, 48],
		iconAnchor: [24, 24]
	})

	// @ts-ignore
	var instagrameableIcon = L.icon({
		iconUrl: '/Marcadores/instagrameable.svg',
		iconSize: [48, 48],
		iconAnchor: [24, 24]
	})

	// Recuperamos los datos de los sitios del sus elementos DOM
	const paranormalDataDOM = document.getElementById('paranormalData');
	const espacioSingularDataDOM = document.getElementById('sitesSingularSpaceData');
	const curiosidadOcultaDataDOM = document.getElementById('sitesCuriosidadOcultaData');
	const instagrameableDataDOM = document.getElementById('sitesInstagrameableData');

	// Si existe el elemento con los datos de los sitios, parseamos los datos
	const paranormalData = JSON.parse(paranormalDataDOM?.dataset.sites ?? '[]');
	const curiosidadOcultaData = JSON.parse(curiosidadOcultaDataDOM?.dataset.sites ?? '[]');
	const instagrameableData = JSON.parse(instagrameableDataDOM?.dataset.sites ?? '[]');
	const espacioSingularData = JSON.parse(espacioSingularDataDOM?.dataset.sites ?? '[]');


	paranormalData.forEach((site: any) => {
		
		// @ts-ignore
		const marker = L.marker(site.coordinates, {icon: paranormalIcon})
		 .addTo(map)

		marker.on('click', () => {
				const modal = document.getElementById(`modal-${site.id}`);
				if (modal) {
					modal.classList.remove('hidden');
				}
			})
		});

	espacioSingularData.forEach((site: any) => {

		// @ts-ignore
		const marker = L.marker(site.coordinates, {icon: espacioSingularIcon})
		 .addTo(map)

		marker.on('click', () => {
				const modal = document.getElementById(`modal-${site.id}`);
				if (modal) {
					modal.classList.remove('hidden');
				}
			})
	})

	curiosidadOcultaData.forEach((site: any) => {

		// @ts-ignore
		const marker = L.marker(site.coordinates, {icon: curiosidadOcultaIcon})
		 .addTo(map)

		marker.on('click', () => {
				const modal = document.getElementById(`modal-${site.id}`);
				if (modal) {
					modal.classList.remove('hidden');
				}
			})
	})

	instagrameableData.forEach((site: any) => {

		// @ts-ignore
		const marker = L.marker(site.coordinates, {icon: instagrameableIcon})
		 .addTo(map)

		marker.on('click', () => {
				const modal = document.getElementById(`modal-${site.id}`);
				if (modal) {
					modal.classList.remove('hidden');
				}
			})
	})

	document.querySelectorAll('.modal-container').forEach((modal) => {
		modal.addEventListener('click', (e) => {
			// Cierra solo si se hace click fuera del contenido
			if ((e.target as Element).className === 'container') {
				console.log('Modal closed');
				modal.classList.add('hidden');
			}
		});
		
		modal.addEventListener('click', (e) => {
			const target = e.target as Element;

			if (target.id === 'close-icon' || target.closest('#close-icon')) {
				modal.classList.add('hidden');
			}
		})
	});

</script>

<style>
	#map {
		position: relative;
		z-index: 0;
	}

	.hidden {
		display: none;
	}

	.modal-container {
    background: #00000050;
    min-height: 100vh;
    position: absolute;
		z-index: 50;
		inset: 0;
    place-content: center;
	}

	.container {
    backdrop-filter: blur(2px);
    height: 100vh;
    display: grid;
    place-content: center;
  }
</style>